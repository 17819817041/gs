{"remainingRequest":"E:\\gs\\Petavi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\gs\\Petavi\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gs\\Petavi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gs\\Petavi\\src\\view\\vetDoctor\\vetDoctor.vue?vue&type=template&id=0e389ae8&scoped=true&","dependencies":[{"path":"E:\\gs\\Petavi\\src\\view\\vetDoctor\\vetDoctor.vue","mtime":1623137734020},{"path":"E:\\gs\\Petavi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gs\\Petavi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\gs\\Petavi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gs\\Petavi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}